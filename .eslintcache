[{"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\App.tsx":"3","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\customHooks.js":"4","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\LoginErrMsg.tsx":"5","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\RootStore.tsx":"6","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\TodosStore.tsx":"7","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\UserStore.tsx":"8","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\SystemStore.tsx":"9","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\todosService.ts":"10","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\httpService.js":"11","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\userService.js":"12","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\pages\\Login.tsx":"13","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\Navbar.tsx":"14","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\pages\\About.tsx":"15","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\pages\\TodosApp.tsx":"16","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\Head.tsx":"17","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\TodosList.tsx":"18","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\NoTodosMsg.tsx":"19","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\ErrorModal.tsx":"20","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\NewTodoCard.tsx":"21","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\TodoCard.tsx":"22","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\ColorPalate.tsx":"23","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\mixins.tsx":"24","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\TxtTodo.tsx":"25","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\ListTodo.tsx":"26","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\VideoImgTodo.tsx":"27","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\MarkableCmp.tsx":"28","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\BrokenUrlMsg.tsx":"29"},{"size":573,"mtime":1610366448169,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":673,"mtime":1610369106280,"results":"33","hashOfConfig":"31"},{"size":1294,"mtime":1610357895369,"results":"34","hashOfConfig":"31"},{"size":523,"mtime":1610361926562,"results":"35","hashOfConfig":"31"},{"size":447,"mtime":1610357877014,"results":"36","hashOfConfig":"31"},{"size":1852,"mtime":1610379663618,"results":"37","hashOfConfig":"31"},{"size":1640,"mtime":1610379653446,"results":"38","hashOfConfig":"31"},{"size":1108,"mtime":1610379679237,"results":"39","hashOfConfig":"31"},{"size":1123,"mtime":1610446953867,"results":"40","hashOfConfig":"31"},{"size":1272,"mtime":1610445455779,"results":"41","hashOfConfig":"31"},{"size":1079,"mtime":1610357895385,"results":"42","hashOfConfig":"31"},{"size":3206,"mtime":1610447784655,"results":"43","hashOfConfig":"31"},{"size":2300,"mtime":1610369180019,"results":"44","hashOfConfig":"31"},{"size":1409,"mtime":1610445563583,"results":"45","hashOfConfig":"31"},{"size":1547,"mtime":1610446855706,"results":"46","hashOfConfig":"31"},{"size":3330,"mtime":1610447585896,"results":"47","hashOfConfig":"31"},{"size":1270,"mtime":1610361926589,"results":"48","hashOfConfig":"31"},{"size":372,"mtime":1610361926584,"results":"49","hashOfConfig":"31"},{"size":1439,"mtime":1610379862442,"results":"50","hashOfConfig":"31"},{"size":3523,"mtime":1610380035137,"results":"51","hashOfConfig":"31"},{"size":5325,"mtime":1610384900613,"results":"52","hashOfConfig":"31"},{"size":756,"mtime":1610361926547,"results":"53","hashOfConfig":"31"},{"size":1655,"mtime":1610361935555,"results":"54","hashOfConfig":"31"},{"size":620,"mtime":1610361926595,"results":"55","hashOfConfig":"31"},{"size":1496,"mtime":1610379822206,"results":"56","hashOfConfig":"31"},{"size":2198,"mtime":1610361926597,"results":"57","hashOfConfig":"31"},{"size":926,"mtime":1610384119757,"results":"58","hashOfConfig":"31"},{"size":399,"mtime":1610362299542,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"jswqc5",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\index.js",[],["131","132"],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\App.tsx",[],["133","134"],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\customHooks.js",["135"],"import { useEffect, useState } from \"react\";\r\n// var window = require(\"global/window\")\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            \r\n            const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n            setFields({\r\n                ...fields,\r\n                [event.target.name]: value\r\n            });\r\n            // console.log('cb, ',cb)\r\n            // if(cb) cb(value)\r\n         \r\n        },\r\n        function () {\r\n            setFields(initialState);\r\n        },\r\n        function (todoToEditValues) {\r\n            setFields(todoToEditValues);\r\n        }\r\n    ];\r\n}\r\nexport function useMediaQuery(query) {\r\n    const [matches, setMatches] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const media = window.matchMedia(query);\r\n      if (media.matches !== matches) {\r\n        setMatches(media.matches);\r\n      }\r\n      const listener = () => {\r\n        setMatches(media.matches);\r\n      };\r\n      media.addListener(listener);\r\n      return () => media.removeListener(listener);\r\n    }, [matches, query]);\r\n  \r\n    return matches;\r\n  }\r\n","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\LoginErrMsg.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\RootStore.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\TodosStore.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\UserStore.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\stores\\SystemStore.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\todosService.ts",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\httpService.js",["136"],"import Axios from 'axios';\r\n// const corsAnywhere = `https://cors-anywhere.herokuapp.com/`\r\n// const serverAddress = `https://todos-next-js.herokuapp.com/api/`\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? 'https://todos-app-nadav-s.herokuapp.com/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err.response.status;\r\n        \r\n    }\r\n}","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\userService.js",["137"],"import httpService from './httpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n}\r\n\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n// function getLoggedInUser() {\r\n//     const currUser = sessionStorage.getItem('user')\r\n\r\n//     return JSON.parse(currUser)\r\n// }","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\pages\\Login.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\Navbar.tsx",["138","139"],"import React, { useContext } from 'react'\r\nimport { Menu, Header, Button, Loader, Segment, Dimmer, Icon } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const Navbar: React.FC = observer(() => {\r\n        const router = useHistory()\r\n        const rootStoreContext = useContext(RootStoreContext);\r\n        const { userStore, systemStore } = rootStoreContext;\r\n        const { loggedInUser } = userStore;\r\n        const { isLoading } = systemStore;\r\n        async function onLogout() {\r\n                try {\r\n                        router.push('/')\r\n                        await userStore.logout()\r\n\r\n                }\r\n                catch (err) {\r\n                        systemStore.onError()\r\n                        console.log('OOPS! had problem at logout, ', err)\r\n                }\r\n        }\r\n\r\n        return (\r\n\r\n                <Menu as=\"nav\" fluid >\r\n                        <Menu.Item as={Header} name=\"Todos App\" >\r\n                                <Link to={loggedInUser? `/TodosApp`:`/`}>\r\n                                        <a>Todos App</a>\r\n                                </Link>\r\n                        </Menu.Item>\r\n                        {loggedInUser && <Menu.Item position=\"left\">\r\n                                <Segment>\r\n                                        <Dimmer active inverted>\r\n                                                {isLoading ? <Loader inverted /> : <Icon color=\"green\" size=\"large\" name=\"check\" />}\r\n                                        </Dimmer>\r\n                                </Segment>\r\n                        </Menu.Item>}\r\n                        <Menu.Menu position=\"right\">\r\n                                <Menu.Item>\r\n                                        <Link to=\"/About\">\r\n                                                <a>About</a>\r\n                                        </Link>\r\n                                </ Menu.Item>\r\n                                {loggedInUser && <Menu.Item position=\"right\"><Button onClick={onLogout}>Logout</Button></Menu.Item>}\r\n                        </Menu.Menu>\r\n\r\n                </Menu >\r\n\r\n        )\r\n})","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\pages\\About.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\pages\\TodosApp.tsx",["140"],"import React, { useEffect, useContext } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Head } from '../cmps/Head'\r\nimport { TodosList } from '../cmps/TodosList'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NoTodosMsg } from '../cmps/NoTodosMsg'\r\nimport { ErrorModal } from '../cmps/ErrorModal'\r\nimport { Dimmer } from 'semantic-ui-react'\r\n\r\nconst TodosApp= observer(() => {\r\n  const rootStoreContext = useContext(RootStoreContext);\r\n  const { todosStore, userStore, systemStore } = rootStoreContext;\r\n  const { todos, sortedTodos } = todosStore;\r\n  const { loggedInUser } = userStore;\r\n  const router = useHistory();\r\n  const isError = systemStore.isError.existingError;\r\n\r\n  useEffect(() => {\r\n\r\n    onAppLoad()\r\n  }, [])\r\n  async function onAppLoad() {\r\n    try {\r\n      if (!loggedInUser) userStore.getLoggedInUser()\r\n      if (!loggedInUser) throw Error\r\n      await todosStore.loadTodos()\r\n    }\r\n    catch(err) {\r\n      console.log('catch',err)\r\n      router.push('/')\r\n    }\r\n  }\r\n\r\n  if (!todos) {\r\n    systemStore.turnLoaderOn();\r\n    return null\r\n  }\r\n  systemStore.turnLoaderOff();\r\n  return (\r\n    <React.Fragment>\r\n      <Dimmer active={(isError)} style={{ position: 'fixed' }} />\r\n        <Head />\r\n        {loggedInUser && todos && <TodosList todos={sortedTodos} />}\r\n        {loggedInUser && !todos.length && <NoTodosMsg />}\r\n        {isError &&\r\n          <ErrorModal />\r\n        }\r\n\r\n    </React.Fragment>\r\n  )\r\n})\r\n\r\nexport default TodosApp","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\Head.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\TodosList.tsx",["141","142"],"import React from 'react'\r\nimport { Todo } from '../interfaces'\r\nimport { TodoCard } from '../cmps/TodoCard'\r\nimport Masonry from 'react-masonry-css'\r\ninterface TodosListProps {\r\n    todos: Todo[],\r\n\r\n}\r\n\r\nexport const TodosList: React.FC<TodosListProps> = ({ todos,  }) => {\r\n    const breakpointColumnsObj = {\r\n        default: 4,\r\n        1100: 3,\r\n        700: 2,\r\n        500: 1\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n        <ul className=\"todos-list clean-list \">\r\n            <Masonry breakpointCols={breakpointColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {todos.map(todo => {\r\n                   if(todo.pinned) return <TodoCard  key={todo._id} todo={todo} />\r\n                })}\r\n\r\n            </Masonry>\r\n\r\n        </ul>\r\n        <ul className=\"todos-list clean-list \">\r\n            <Masonry breakpointCols={breakpointColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {todos.map(todo => {\r\n                    if(!todo.pinned)return <TodoCard  key={todo._id} todo={todo} />\r\n                })}\r\n\r\n            </Masonry>\r\n\r\n        </ul>\r\n        </React.Fragment>\r\n\r\n    );\r\n}","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\NoTodosMsg.tsx",["143"],"import React from 'react'\r\nimport { Segment,Icon,Header } from 'semantic-ui-react'\r\n\r\ninterface NoTodosMsgProps {\r\n\r\n}\r\n\r\nexport const NoTodosMsg: React.FC<NoTodosMsgProps> = ({ }) => {\r\n    return (<Segment textAlign=\"center\">\r\n        <Header icon>\r\n            <Icon name='exclamation' />\r\n      You have no Todos. Please make some. \r\n    </Header>\r\n    </Segment>);\r\n}","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\ErrorModal.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\NewTodoCard.tsx",["144"],"import React, {  useState, useRef, useEffect } from 'react'\r\nimport { Markable, Todo } from '../interfaces'\r\nimport { Button, Icon, Popup, Card } from 'semantic-ui-react'\r\nimport { ColorPalate } from './ColorPalate'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { setTodoByType } from '../services/mixins'\r\n\r\ninterface NewTodoCardProps {\r\n    type: string,\r\n    onTodoSubmit(todo: Todo): void,\r\n    isSendTodo?: boolean\r\n\r\n}\r\nexport const NewTodoCard: React.FC<NewTodoCardProps> = ({ type, onTodoSubmit, isSendTodo = false }) => {\r\n\r\n    useEffect(() => {\r\n        if (isSendTodo) onSendTodo();\r\n        isSendTodo = false;\r\n\r\n    })\r\n    const [title, setTitle] = useState<string>('Title');\r\n    const [bgc, setBcg] = useState<string | null>(null);\r\n    const [txt, setTxt] = useState<string>('Enter txt here');\r\n    const [pinned, setIsPinned] = useState<boolean>(false);\r\n    const [markables, setMarkables] = useState<Markable[]>([]);\r\n    const [paleteOpen, setPaleteOpen] = useState<boolean>(false);\r\n    const isNewTxt: boolean = true;\r\n    const isNewTodo: boolean = true;\r\n    const cardTitleRef = useRef();\r\n    function onTitleChange(event): void {\r\n        setTitle(event.target.value);\r\n\r\n    }\r\n    function onTxtChange(txt: string): void {\r\n        setTxt(txt);\r\n    }\r\n    function onDeleteMarkable(markableToDelete: string): void {\r\n        setMarkables(markables.filter(markable => markable.txt !== markableToDelete));\r\n\r\n    }\r\n    function onAddMarkable(markableToAdd: Markable): void {\r\n        setMarkables([...markables, markableToAdd]);\r\n    }\r\n    function onToggleMarkable() {\r\n        return\r\n    }\r\n    function onChooseColor(color) {\r\n        setBcg(color)\r\n    }\r\n    function onSendTodo() {\r\n\r\n        const newTodo: Todo = {\r\n            title,\r\n            type,\r\n            txt,\r\n            bgc,\r\n            pinned\r\n        }\r\n        if (type === 'list') newTodo.markables = markables;\r\n        onTodoSubmit(newTodo);\r\n        setInitialState();\r\n    }\r\n    function setInitialState() {\r\n        setTitle('Title');\r\n        setTxt('Enter text here');\r\n        setIsPinned(false);\r\n        setMarkables([]);\r\n        setBcg(null);\r\n        setPaleteOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Card centered className=\"todo-card\" style={{ backgroundColor: bgc, transition: '0.3s', maxHeight: '100%' }}>\r\n            <Icon onClick={() => setIsPinned(!pinned)} className=\"pin-btn cursor-pointer\" style={{ marginBottom: \"20px\", alignSelf: 'center' }} color={pinned ? 'red' : 'black'} name='pin' />\r\n            <ContentEditable\r\n                innerRef={cardTitleRef}\r\n                html={title}\r\n                disabled={false}\r\n                onChange={onTitleChange}\r\n                tagName='h2'\r\n            />\r\n            {<Card.Description >{setTodoByType(type, txt, onTxtChange, onDeleteMarkable, onAddMarkable, onToggleMarkable, markables, isNewTxt, isNewTodo)}</Card.Description>}\r\n            <Card.Content textAlign=\"center\" className=\"card-btns-container\" >\r\n                <Popup\r\n                    on='click'\r\n                    pinned\r\n                    open={paleteOpen}\r\n                    onClose={() => setPaleteOpen(false)}\r\n                    onOpen={() => setPaleteOpen(true)}\r\n                    trigger={<Button circular icon> <Icon name=\"paint brush\" /></Button>}\r\n                >\r\n                    <ColorPalate onChooseColor={onChooseColor} />\r\n                </Popup>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\TodoCard.tsx",["145","146","147","148","149"],"import React, { useContext, useState, useRef, useEffect } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Markable, Todo } from '../interfaces'\r\nimport { Button, Icon, Popup, Card, Header } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../stores/RootStore'\r\nimport { ColorPalate } from './ColorPalate'\r\nimport { TxtTodo } from './TxtTodo'\r\nimport { ListTodo } from './ListTodo'\r\nimport { VideoImgTodo } from './VideoImgTodo'\r\nimport { setRelevantPlaceholder,setTodoByType } from '../services/mixins'\r\nimport ContentEditable from 'react-contenteditable'\r\n// import * as moment from 'moment';\r\n\r\n\r\ninterface todoProps {\r\n    todo: Todo,\r\n}\r\nconst moment = require('moment');\r\n\r\nexport const TodoCard: React.FC<todoProps> = observer(({ todo }) => {\r\n    const { txt, _id, pinned, title, created, lastUpdated, markables, type } = todo;\r\n    const rootStoreContext = useContext(RootStoreContext);\r\n    const { todosStore, systemStore } = rootStoreContext;\r\n    const [paleteOpen, setPaleteOpen] = useState<boolean>(false);\r\n    const [isNewTxt, setIsNewTxt] = useState(false);\r\n    const cardTitleRef = useRef();\r\n    useEffect(() => {\r\n        if (!txt) setIsNewTxt(true)\r\n    }, [])\r\n\r\n    async function onDeleteTodo() {\r\n        systemStore.turnLoaderOn()\r\n        await todosStore.deleteTodo(_id);\r\n        systemStore.turnLoaderOff();\r\n    }\r\n    function toggleIsNewTxt():void  {\r\n        setIsNewTxt(!isNewTxt);\r\n    }\r\n    function onChooseColor(chosenClr):void  {\r\n        todo.bgc = chosenClr;\r\n        onUpdateTodo(todo);\r\n        setPaleteOpen(false);\r\n    }\r\n    function onPinTodo():void  {\r\n        todo.pinned = !todo.pinned;\r\n        onUpdateTodo(todo);\r\n    }\r\n    let debounce = null;\r\n\r\n    function onTxtChange(txt: string, isDebounce: boolean = true): void {\r\n        if (!isDebounce) {\r\n            txtChange(txt);\r\n            return\r\n        }\r\n\r\n        if (debounce) clearTimeout(debounce)\r\n        debounce = setTimeout(() => {\r\n            txtChange(txt)\r\n        }, 2500);\r\n    }\r\n\r\n    function txtChange(txt: string):void {\r\n        todo.txt = txt;\r\n        onUpdateTodo(todo);\r\n        setIsNewTxt(false);\r\n    }\r\n    function onTitleChange(event):void {\r\n        if (debounce) clearTimeout(debounce)\r\n        debounce = setTimeout(() => {\r\n            todo.title = event.target.value;\r\n            onUpdateTodo(todo);\r\n        }, 2500);\r\n    }\r\n    function onToggleMarkable(markableToToggle:Markable):void {\r\n        markableToToggle.isDone = !markableToToggle.isDone;\r\n        todo.markables = todo.markables.map((markable) =>{\r\n            if(markable.txt === markableToToggle.txt ) markable = markableToToggle\r\n            return markable\r\n        })\r\n        onUpdateTodo(todo);\r\n    }\r\n    function onAddMarkable(markableToAdd:Markable):void {\r\n        todo.markables.push(markableToAdd);\r\n        onUpdateTodo(todo);\r\n    }\r\n    function onDeleteMarkable(markableTxt: string): void {\r\n        todo.markables = todo.markables.filter(markable => markable.txt !== markableTxt);\r\n        onUpdateTodo(todo);\r\n    }\r\n    async function onUpdateTodo(todoToUpdate: Todo = todo) {\r\n        try {\r\n            systemStore.turnLoaderOn();\r\n            await todosStore.saveTodo(todoToUpdate);\r\n            systemStore.turnLoaderOff();\r\n        }\r\n        catch (err) {\r\n            systemStore.onError()\r\n            console.log('OOPS!', err);\r\n        }\r\n    }\r\n    function isShowEditBtn():boolean | null{\r\n        if(type==='img' || type ==='video') return true\r\n    }\r\n    return (\r\n        <Card className=\"todo-card\" style={{ backgroundColor: todo.bgc, transition: '0.3s', maxHeight: '100%' }}>\r\n            <Icon onClick={onPinTodo} className=\"pin-btn cursor-pointer\" style={{ marginBottom: \"20px\", alignSelf: 'center' }} color={pinned ? 'red' : 'black'}  name='pin' />\r\n            <ContentEditable\r\n                innerRef={cardTitleRef}\r\n                html={title || 'title'}\r\n                disabled={false}\r\n                onChange={onTitleChange}\r\n                tagName='h2'\r\n            />\r\n            <Header as=\"h4\">Created :{`${moment(created).fromNow()}`}</Header>\r\n            {lastUpdated && <Header as=\"h4\">Last updated: {`${moment(lastUpdated).fromNow()}`}</Header>}\r\n            {<Card.Description >{setTodoByType(type,txt,onTxtChange,onDeleteMarkable,onAddMarkable,onToggleMarkable,markables,isNewTxt)}</Card.Description>}\r\n            <Card.Content textAlign=\"center\" className=\"card-btns-container\" >\r\n                <Button circular onClick={onDeleteTodo} icon>\r\n                    <Icon name=\"trash alternate outline\" />\r\n                </Button>\r\n                {isShowEditBtn() && <Button active ={isNewTxt} circular onClick={toggleIsNewTxt} icon>\r\n                    <Icon name=\"edit outline\" />\r\n                </Button>}\r\n                <Popup\r\n                    on='click'\r\n                    pinned\r\n                    open={paleteOpen}\r\n                    onClose={() => setPaleteOpen(false)}\r\n                    onOpen={() => setPaleteOpen(true)}\r\n                    trigger={<Button circular icon> <Icon name=\"paint brush\" /></Button>}\r\n                >\r\n                    <ColorPalate onChooseColor={onChooseColor} />\r\n                </Popup>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n})","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\ColorPalate.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\services\\mixins.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\TxtTodo.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\ListTodo.tsx",[],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\VideoImgTodo.tsx",["150"],"import React, { useEffect, useState } from 'react'\r\nimport { Embed, Input, Form, Image } from 'semantic-ui-react'\r\nimport { BrokenUrlMsg } from './BrokenUrlMsg'\r\nimport { useForm } from '../services/customHooks'\r\n\r\ninterface VideoImgTodoProps {\r\n    url: string,\r\n    onNewUrl(txt: string, isDebounce?: boolean): void,\r\n    placeholder: string,\r\n    isNewTxt: boolean,\r\n    type: string,\r\n    isNewTodo: boolean\r\n}\r\n\r\nexport const VideoImgTodo: React.FC<VideoImgTodoProps> = ({ url, onNewUrl, placeholder, isNewTxt, type, isNewTodo }) => {\r\n    const [newUrl, handleChange] = useForm({ txt: '' });\r\n    useEffect(() => {\r\n        newUrl.txt = '';\r\n        setIsError(false);\r\n    }, [url])\r\n\r\n    function extractVideoId(): string | null {\r\n        try {\r\n            if (!url) {\r\n                return\r\n            }\r\n            let videoid = url.split('v=')[1];\r\n            const ampersandPosition = videoid.indexOf('&');\r\n            videoid = videoid.substring(0, ampersandPosition);\r\n            return videoid;\r\n\r\n        }\r\n        catch {\r\n            return null\r\n        }\r\n    }\r\n    function onSendNewUrl(): void {\r\n        onNewUrl(newUrl.txt, false);\r\n    }\r\n    function onComposeNewTodo(event): void {\r\n        handleChange(event)\r\n        onNewUrl(event.target.value, false);\r\n\r\n    }\r\n    const [isImgError, setIsError] = useState(false);\r\n    if (isNewTodo && isNewTxt) {\r\n        return (\r\n            <Form >\r\n                <Input name='txt' placeholder={placeholder} onChange={onComposeNewTodo}  value={newUrl.txt} />\r\n            </Form>\r\n        )\r\n    }\r\n    if (isNewTxt) {\r\n        return (\r\n        <Form onSubmit={onSendNewUrl}>\r\n            <Input name='txt' placeholder={placeholder} onChange={handleChange} value={newUrl.txt} />\r\n        </Form>\r\n    )}\r\n\r\n    if ((!extractVideoId() && type === 'video')) return <BrokenUrlMsg cmpType={'video'} />\r\n    if ((type === 'img' && isImgError)) return <BrokenUrlMsg cmpType={'image'} />\r\n    if (type === 'img') return (\r\n        <Image onError={() => setIsError(true)} src={url} alt=\"\" />\r\n    )\r\n\r\n    if (type === 'video') return (\r\n        <Embed\r\n            id={extractVideoId()} source=\"youtube\" />\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\MarkableCmp.tsx",[],["151","152"],"C:\\Users\\User\\Desktop\\Codeing Academy\\Nadav Samuel\\Projects\\Todos 2\\frontend\\frontend\\src\\cmps\\BrokenUrlMsg.tsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":7,"column":37,"nodeType":"159","endLine":7,"endColumn":45,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":13,"column":1,"nodeType":"163","endLine":26,"endColumn":2},{"ruleId":"161","severity":1,"message":"162","line":3,"column":1,"nodeType":"163","endLine":11,"endColumn":2},{"ruleId":"164","severity":1,"message":"165","line":32,"column":41,"nodeType":"166","endLine":32,"endColumn":44},{"ruleId":"164","severity":1,"message":"165","line":45,"column":49,"nodeType":"166","endLine":45,"endColumn":52},{"ruleId":"157","severity":1,"message":"167","line":22,"column":6,"nodeType":"159","endLine":22,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":23,"column":33,"nodeType":"171","messageId":"172","endLine":23,"endColumn":35},{"ruleId":"169","severity":1,"message":"170","line":34,"column":33,"nodeType":"171","messageId":"172","endLine":34,"endColumn":35},{"ruleId":"173","severity":1,"message":"174","line":8,"column":55,"nodeType":"175","messageId":"176","endLine":8,"endColumn":58},{"ruleId":"157","severity":1,"message":"177","line":18,"column":22,"nodeType":"178","endLine":18,"endColumn":27},{"ruleId":"179","severity":1,"message":"180","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":17},{"ruleId":"179","severity":1,"message":"183","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":18},{"ruleId":"179","severity":1,"message":"184","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":22},{"ruleId":"179","severity":1,"message":"185","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":32},{"ruleId":"157","severity":1,"message":"186","line":29,"column":8,"nodeType":"159","endLine":29,"endColumn":10,"suggestions":"187"},{"ruleId":"157","severity":1,"message":"188","line":20,"column":8,"nodeType":"159","endLine":20,"endColumn":13,"suggestions":"189"},{"ruleId":"153","replacedBy":"190"},{"ruleId":"155","replacedBy":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["194"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'onAppLoad'. Either include it or remove the dependency array.",["195"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","Assignments to the 'isSendTodo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","@typescript-eslint/no-unused-vars","'TxtTodo' is defined but never used.","Identifier","unusedVar","'ListTodo' is defined but never used.","'VideoImgTodo' is defined but never used.","'setRelevantPlaceholder' is defined but never used.","React Hook useEffect has a missing dependency: 'txt'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'newUrl'. Either include it or remove the dependency array.",["197"],["192"],["193"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [cb, fields]",{"range":"206","text":"207"},"Update the dependencies array to be: [onAppLoad]",{"range":"208","text":"209"},"Update the dependencies array to be: [txt]",{"range":"210","text":"211"},"Update the dependencies array to be: [newUrl, url]",{"range":"212","text":"213"},[248,256],"[cb, fields]",[807,809],"[onAppLoad]",[1209,1211],"[txt]",[683,688],"[newUrl, url]"]